services:
  data-fetcher:
    build:
      context: .
      dockerfile: ./apps/data-fetcher/Dockerfile
      target: development
    container_name: data-fetcher
    depends_on:
      - db
    command: npm run start:dev data-fetcher
    env_file:
      - ./apps/data-fetcher/.env
    volumes:
      - /usr/src/app/node_modules
    networks:
      - app-network
    ports:
      - '3000:3000'
    develop:
      watch:
        - path: ./apps/data-fetcher
          target: /usr/src/app/apps/data-fetcher
          action: sync

  db:
    image: postgres:alpine
    restart: always
    container_name: db
    ports:
      - '5433:5432'
    env_file: '.env'
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge
